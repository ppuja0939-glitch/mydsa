import java.util.PriorityQueue;

public class MinimumCostOfRopes {
    public static long minCost(long[] ropes) {
        PriorityQueue<Long> minHeap = new PriorityQueue<>();
        for (long rope : ropes) {
            minHeap.offer(rope);
        }
        long totalCost = 0;
        while (minHeap.size() > 1) {
            long first = minHeap.poll();
            long second = minHeap.poll();
            long cost = first + second;
            totalCost += cost;
            minHeap.offer(cost);
        }
        return totalCost;
    }

    public static void main(String[] args) {
        long[] ropes = {4, 3, 2, 6};
        System.out.println("Minimum total cost to connect ropes: " + minCost(ropes));
    }
}
